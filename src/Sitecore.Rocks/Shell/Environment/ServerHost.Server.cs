//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Sitecore.Rocks.Annotations;
using Sitecore.Rocks.Data;
using Sitecore.Rocks.Sites;

#pragma warning disable 1591

namespace Sitecore.Rocks.Shell.Environment
{
  using Rocks.Annotations;
  using Rocks.Data;
  using Rocks.Sites;



  public partial class ServerHost 
  {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetChildren([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("GetChildren", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void RebuildLinkDatabase([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("RebuildLinkDatabase", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void RebuildSearchIndex([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("RebuildSearchIndex", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Query([NotNull] Site site, [NotNull] string queryText, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Query", completed, queryText);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetFiles([NotNull] Site site, [NotNull] string folder, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("GetFiles", completed, folder);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void CreateItemPath([NotNull] DatabaseUri databaseUri, [NotNull] string path, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("CreateItemPath", completed, databaseUri.DatabaseName.ToString(), path);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetChildrenFromPath([NotNull] string path, [NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("GetChildrenFromPath", completed, path, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetGutterItems([NotNull] DatabaseUri databaseUri, [NotNull] string items, [NotNull] string subitems, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("GetGutterItems", completed, databaseUri.DatabaseName.ToString(), items, subitems);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetGutters([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("GetGutters", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetInsertOptions([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("GetInsertOptions", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetLayout([NotNull] string layout, [NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("GetLayout", completed, layout, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetPlaceholders([NotNull] ItemUri itemUri, [NotNull] string renderings, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("GetPlaceholders", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), renderings);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetSubitemSortings([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("GetSubitemSortings", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void RequestHandler([NotNull] Site site, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("RequestHandler", completed);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void ResetSortOrder([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("ResetSortOrder", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void ServerComponents([NotNull] Site site, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("ServerComponents", completed);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SetGutter([NotNull] Site site, [NotNull] string id, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("SetGutter", completed, id);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SetSortOrder([NotNull] ItemUri itemUri, [NotNull] string sortOrder, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("SetSortOrder", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString(), sortOrder);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Validate([NotNull] DatabaseUri databaseUri, [NotNull] string xml, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Validate", completed, databaseUri.DatabaseName.ToString(), xml);
      }

    private ArchivesRequests archivesrequests;

    [NotNull]
    public ArchivesRequests Archives { get { return this.archivesrequests ?? (this.archivesrequests = new ArchivesRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class ArchivesRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void EmptyArchive([NotNull] DatabaseUri databaseUri, [NotNull] string archiveName, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Archives.EmptyArchive", completed, databaseUri.DatabaseName.ToString(), archiveName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void RestoreItems([NotNull] DatabaseUri databaseUri, [NotNull] string archiveName, [NotNull] string items, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Archives.RestoreItems", completed, databaseUri.DatabaseName.ToString(), archiveName, items);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetArchivedItems([NotNull] DatabaseUri databaseUri, [NotNull] string archiveName, [NotNull] string pageIndex, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Archives.GetArchivedItems", completed, databaseUri.DatabaseName.ToString(), archiveName, pageIndex);
      }

    }

    private CachesRequests cachesrequests;

    [NotNull]
    public CachesRequests Caches { get { return this.cachesrequests ?? (this.cachesrequests = new CachesRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class CachesRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Clear([NotNull] Site site, [NotNull] string caches, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Caches.Clear", completed, caches);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void ClearAll([NotNull] Site site, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Caches.ClearAll", completed);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetCacheKeys([NotNull] Site site, [NotNull] string cacheName, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Caches.GetCacheKeys", completed, cacheName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetCaches([NotNull] Site site, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Caches.GetCaches", completed);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Scavenge([NotNull] Site site, [NotNull] string caches, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Caches.Scavenge", completed, caches);
      }

    }

    private CloningRequests cloningrequests;

    [NotNull]
    public CloningRequests Cloning { get { return this.cloningrequests ?? (this.cloningrequests = new CloningRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class CloningRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Clone([NotNull] Site site, [NotNull] string sourceDatabaseName, [NotNull] string sourceItemId, [NotNull] string targetDatabaseName, [NotNull] string targetItemId, [NotNull] string deep, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Cloning.Clone", completed, sourceDatabaseName, sourceItemId, targetDatabaseName, targetItemId, deep);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Unclone([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Cloning.Unclone", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

    }

    private CodeGenerationRequests codegenerationrequests;

    [NotNull]
    public CodeGenerationRequests CodeGeneration { get { return this.codegenerationrequests ?? (this.codegenerationrequests = new CodeGenerationRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class CodeGenerationRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void CompiledCodeGenerator([NotNull] Site site, [NotNull] string code, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("CodeGeneration.CompiledCodeGenerator", completed, code);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetTemplatesWithFields([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("CodeGeneration.GetTemplatesWithFields", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void AspxGenerator([NotNull] Site site, [NotNull] string page, [NotNull] string name, [NotNull] string parameters, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("CodeGeneration.AspxGenerator", completed, page, name, parameters);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void XsltGenerator([NotNull] DatabaseUri databaseUri, [NotNull] string xslt, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("CodeGeneration.XsltGenerator", completed, databaseUri.DatabaseName.ToString(), xslt);
      }

    }

    private ContentTreesRequests contenttreesrequests;

    [NotNull]
    public ContentTreesRequests ContentTrees { get { return this.contenttreesrequests ?? (this.contenttreesrequests = new ContentTreesRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class ContentTreesRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetWebConfig([NotNull] Site site, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("ContentTrees.GetWebConfig", completed);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Find([NotNull] string text, [NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("ContentTrees.Find", completed, text, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

    }

    private DebugTracesRequests debugtracesrequests;

    [NotNull]
    public DebugTracesRequests DebugTraces { get { return this.debugtracesrequests ?? (this.debugtracesrequests = new DebugTracesRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class DebugTracesRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void DeleteSessions([NotNull] Site site, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("DebugTraces.DeleteSessions", completed);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetSession([NotNull] Site site, [NotNull] string sessionName, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("DebugTraces.GetSession", completed, sessionName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetSessions([NotNull] Site site, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("DebugTraces.GetSessions", completed);
      }

    }

    private FilesRequests filesrequests;

    [NotNull]
    public FilesRequests Files { get { return this.filesrequests ?? (this.filesrequests = new FilesRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class FilesRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void DeleteTempFolders([NotNull] Site site, [NotNull] string folders, [NotNull] string date, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Files.DeleteTempFolders", completed, folders, date);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetTempFolders([NotNull] Site site, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Files.GetTempFolders", completed);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void ReadFile([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Files.ReadFile", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Upload([NotNull] Site site, [NotNull] string filePath, [NotNull] string file, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Files.Upload", completed, filePath, file);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SaveFile([NotNull] ItemUri itemUri, [NotNull] string fileContents, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Files.SaveFile", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), fileContents);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Delete([NotNull] Site site, [NotNull] string filePath, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Files.Delete", completed, filePath);
      }

    }

    private IndexesRequests indexesrequests;

    [NotNull]
    public IndexesRequests Indexes { get { return this.indexesrequests ?? (this.indexesrequests = new IndexesRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class IndexesRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetDocument([NotNull] Site site, [NotNull] string indexName, [NotNull] string documentIndex, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Indexes.GetDocument", completed, indexName, documentIndex);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetDocuments([NotNull] Site site, [NotNull] string indexName, [NotNull] string fieldName, [NotNull] string term, [NotNull] string offset, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Indexes.GetDocuments", completed, indexName, fieldName, term, offset);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetIndexes([NotNull] Site site, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Indexes.GetIndexes", completed);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetTerms([NotNull] Site site, [NotNull] string indexName, [NotNull] string fieldName, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Indexes.GetTerms", completed, indexName, fieldName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void OptimizeIndex([NotNull] Site site, [NotNull] string indexName, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Indexes.OptimizeIndex", completed, indexName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void RebuildIndex([NotNull] Site site, [NotNull] string indexName, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Indexes.RebuildIndex", completed, indexName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Search([NotNull] Site site, [NotNull] string indexName, [NotNull] string fieldName, [NotNull] string search, [NotNull] string type, [NotNull] string pageOffset, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Indexes.Search", completed, indexName, fieldName, search, type, pageOffset);
      }

    }

    private ItemsRequests itemsrequests;

    [NotNull]
    public ItemsRequests Items { get { return this.itemsrequests ?? (this.itemsrequests = new ItemsRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class ItemsRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void CopyItems([NotNull] string sourceItemIds, [NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.CopyItems", completed, sourceItemIds, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void DeleteItems([NotNull] DatabaseUri databaseUri, [NotNull] string items, [NotNull] string dryRun, [NotNull] string quick, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Items.DeleteItems", completed, databaseUri.DatabaseName.ToString(), items, dryRun, quick);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Move([NotNull] ItemUri itemUri, [NotNull] string newParentId, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.Move", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), newParentId);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Rename([NotNull] ItemUri itemUri, [NotNull] string newName, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.Rename", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), newName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetDescendants([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.GetDescendants", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetDisplayNames([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.GetDisplayNames", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetHistory([NotNull] DatabaseUri databaseUri, [NotNull] string fromDate, [NotNull] string toDate, [NotNull] string actions, [NotNull] string userName, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Items.GetHistory", completed, databaseUri.DatabaseName.ToString(), fromDate, toDate, actions, userName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetItemHeaders([NotNull] Site site, [NotNull] string items, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Items.GetItemHeaders", completed, items);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetItemId([NotNull] string itemPath, [NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Items.GetItemId", completed, itemPath, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetItemUrls([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.GetItemUrls", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetModifiedItems([NotNull] DatabaseUri databaseUri, [NotNull] string fromDate, [NotNull] string toDate, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Items.GetModifiedItems", completed, databaseUri.DatabaseName.ToString(), fromDate, toDate);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetThumbnail([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.GetThumbnail", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SetDisplayNames([NotNull] ItemUri itemUri, [NotNull] string names, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.SetDisplayNames", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString(), names);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SetThumbnail([NotNull] ItemUri itemUri, [NotNull] string fieldId, [NotNull] string fileName, [NotNull] string zoom, [NotNull] string x, [NotNull] string y, [NotNull] string updateItem, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.SetThumbnail", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), fieldId, fileName, zoom, x, y, updateItem);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void CopyTo([NotNull] ItemUri itemUri, [NotNull] string newParent, [NotNull] string name, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.CopyTo", completed, itemUri.ItemId.ToString(), newParent, name, itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void CreateItem([NotNull] DatabaseUri databaseUri, [NotNull] string parentPath, [NotNull] string newName, [NotNull] string templateName, [NotNull] string fields, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Items.CreateItem", completed, databaseUri.DatabaseName.ToString(), parentPath, newName, templateName, fields);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Duplicate([NotNull] ItemUri itemUri, [NotNull] string name, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.Duplicate", completed, itemUri.ItemId.ToString(), name, itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Exists([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.Exists", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetBreadcrumbItem([NotNull] DatabaseUri databaseUri, [NotNull] string path, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Items.GetBreadcrumbItem", completed, databaseUri.DatabaseName.ToString(), path);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetDependencies([NotNull] DatabaseUri databaseUri, [NotNull] string itemsList, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Items.GetDependencies", completed, databaseUri.DatabaseName.ToString(), itemsList);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetItemHeader([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.GetItemHeader", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SetFieldValue([NotNull] ItemUri itemUri, [NotNull] string language, [NotNull] string version, [NotNull] string fieldName, [NotNull] string value, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.SetFieldValue", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), language, version, fieldName, value);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetItemFields([NotNull] ItemUri itemUri, [NotNull] string language, [NotNull] string version, [NotNull] string allFields, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Items.GetItemFields", completed, itemUri.ItemId.ToString(), language, version, allFields, itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Save([NotNull] string xml, [NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Items.Save", completed, xml, databaseUri.DatabaseName.ToString());
      }

    }

    private LanguagesRequests languagesrequests;

    [NotNull]
    public LanguagesRequests Languages { get { return this.languagesrequests ?? (this.languagesrequests = new LanguagesRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class LanguagesRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SetContextLanguage([NotNull] Site site, [NotNull] string languageName, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Languages.SetContextLanguage", completed, languageName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetLanguages([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Languages.GetLanguages", completed, databaseUri.DatabaseName.ToString());
      }

    }

    private LayoutsRequests layoutsrequests;

    [NotNull]
    public LayoutsRequests Layouts { get { return this.layoutsrequests ?? (this.layoutsrequests = new LayoutsRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class LayoutsRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void CreatePlaceHolderSettings([NotNull] DatabaseUri databaseUri, [NotNull] string path, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Layouts.CreatePlaceHolderSettings", completed, databaseUri.DatabaseName.ToString(), path);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetDevices([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Layouts.GetDevices", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetLayoutPlaceHolders([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Layouts.GetLayoutPlaceHolders", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetRenderingParameters([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Layouts.GetRenderingParameters", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetRenderings([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Layouts.GetRenderings", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SaveLayout([NotNull] ItemUri itemUri, [NotNull] string languageName, [NotNull] string version, [NotNull] string fieldName, [NotNull] string xml, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Layouts.SaveLayout", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), languageName, version, fieldName, xml);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetLayouts([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Layouts.GetLayouts", completed, databaseUri.DatabaseName.ToString());
      }

    }

    private LinksRequests linksrequests;

    [NotNull]
    public LinksRequests Links { get { return this.linksrequests ?? (this.linksrequests = new LinksRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class LinksRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetLinks([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Links.GetLinks", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetTemplateInstances([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Links.GetTemplateInstances", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

    }

    private MediaRequests mediarequests;

    [NotNull]
    public MediaRequests Media { get { return this.mediarequests ?? (this.mediarequests = new MediaRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class MediaRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Attach([NotNull] ItemUri itemUri, [NotNull] string fileName, [NotNull] string fileData, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Media.Attach", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), fileName, fileData);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Detach([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Media.Detach", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void DownloadAttachment([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Media.DownloadAttachment", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Search([NotNull] string queryText, [NotNull] string field, [NotNull] string condition, [NotNull] ItemUri itemUri, [NotNull] string pageNumber, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Media.Search", completed, queryText, field, condition, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), pageNumber);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Upload([NotNull] DatabaseUri databaseUri, [NotNull] string filePath, [NotNull] string file, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Media.Upload", completed, databaseUri.DatabaseName.ToString(), filePath, file);
      }

    }

    private PackagesRequests packagesrequests;

    [NotNull]
    public PackagesRequests Packages { get { return this.packagesrequests ?? (this.packagesrequests = new PackagesRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class PackagesRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void AnalyzePackage([NotNull] Site site, [NotNull] string fileName, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Packages.AnalyzePackage", completed, fileName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void BuildPureNuGetPackage([NotNull] Site site, [NotNull] string itemList, [NotNull] string fileList, [NotNull] string packageName, [NotNull] string author, [NotNull] string version, [NotNull] string publisher, [NotNull] string license, [NotNull] string comment, [NotNull] string readme, [NotNull] string targetFileFolder, [NotNull] string nuget, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Packages.BuildPureNuGetPackage", completed, itemList, fileList, packageName, author, version, publisher, license, comment, readme, targetFileFolder, nuget);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void BuildPackage([NotNull] Site site, [NotNull] string itemList, [NotNull] string fileList, [NotNull] string packageName, [NotNull] string author, [NotNull] string version, [NotNull] string publisher, [NotNull] string license, [NotNull] string comment, [NotNull] string readme, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Packages.BuildPackage", completed, itemList, fileList, packageName, author, version, publisher, license, comment, readme);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void BuildSitecoreNuGetPackage([NotNull] Site site, [NotNull] string itemList, [NotNull] string fileList, [NotNull] string packageName, [NotNull] string author, [NotNull] string version, [NotNull] string publisher, [NotNull] string license, [NotNull] string comment, [NotNull] string readme, [NotNull] string targetFileFolder, [NotNull] string nugetPath, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Packages.BuildSitecoreNuGetPackage", completed, itemList, fileList, packageName, author, version, publisher, license, comment, readme, targetFileFolder, nugetPath);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void BuildUpdatePackage([NotNull] Site site, [NotNull] string itemList, [NotNull] string fileList, [NotNull] string packageName, [NotNull] string author, [NotNull] string version, [NotNull] string publisher, [NotNull] string license, [NotNull] string comment, [NotNull] string readme, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Packages.BuildUpdatePackage", completed, itemList, fileList, packageName, author, version, publisher, license, comment, readme);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void CreateAntiPackage([NotNull] Site site, [NotNull] string fileName, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Packages.CreateAntiPackage", completed, fileName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetPackageFolder([NotNull] Site site, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Packages.GetPackageFolder", completed);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetPackageInformation([NotNull] Site site, [NotNull] string fileName, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Packages.GetPackageInformation", completed, fileName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void InstallPackage([NotNull] Site site, [NotNull] string file, [NotNull] string uploadedFile, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Packages.InstallPackage", completed, file, uploadedFile);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Upload([NotNull] Site site, [NotNull] string data, [NotNull] string fileName, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Packages.Upload", completed, data, fileName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void UploadAndInstall([NotNull] Site site, [NotNull] string data, [NotNull] string fileName, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Packages.UploadAndInstall", completed, data, fileName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void CreatePackage([NotNull] DatabaseUri databaseUri, [NotNull] string itemList, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Packages.CreatePackage", completed, databaseUri.DatabaseName.ToString(), itemList);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void DeserializeItem([NotNull] DatabaseUri databaseUri, [NotNull] string itemPath, [NotNull] string contents, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Packages.DeserializeItem", completed, databaseUri.DatabaseName.ToString(), itemPath, contents);
      }

    }

    private ProjectsRequests projectsrequests;

    [NotNull]
    public ProjectsRequests Projects { get { return this.projectsrequests ?? (this.projectsrequests = new ProjectsRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class ProjectsRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetItemsWithFilePaths([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Projects.GetItemsWithFilePaths", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void RebindFileItems([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Projects.RebindFileItems", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Commit([NotNull] Site site, [NotNull] string fileName, [NotNull] string fileContents, [NotNull] string siteTimestamp, [NotNull] string siteFileSize, [NotNull] string action, [NotNull] string isDryRun, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Projects.Commit", completed, fileName, fileContents, siteTimestamp, siteFileSize, action, isDryRun);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Update([NotNull] Site site, [NotNull] string fileName, [NotNull] string serverTimestamp, [NotNull] string serverFileSize, [NotNull] string action, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Projects.Update", completed, fileName, serverTimestamp, serverFileSize, action);
      }

    }

    private PublishingRequests publishingrequests;

    [NotNull]
    public PublishingRequests Publishing { get { return this.publishingrequests ?? (this.publishingrequests = new PublishingRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class PublishingRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void AdvancedPublish([NotNull] ItemUri itemUri, [NotNull] string mode, [NotNull] string source, [NotNull] string languages, [NotNull] string targets, [NotNull] string relatedItems, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Publishing.AdvancedPublish", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), mode, source, languages, targets, relatedItems);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetAdvancedPublishingInformation([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Publishing.GetAdvancedPublishingInformation", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void CleanUpPublishingQueue([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Publishing.CleanUpPublishingQueue", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void ClearPublishingQueue([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Publishing.ClearPublishingQueue", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetPublishingQueue([NotNull] DatabaseUri databaseUri, [NotNull] string pageNumber, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Publishing.GetPublishingQueue", completed, databaseUri.DatabaseName.ToString(), pageNumber);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetPublishingRestrictions([NotNull] ItemUri itemUri, [NotNull] string languageName, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Publishing.GetPublishingRestrictions", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), languageName);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Publish([NotNull] DatabaseUri databaseUri, [NotNull] string mode, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Publishing.Publish", completed, databaseUri.DatabaseName.ToString(), mode);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void PublishItem([NotNull] DatabaseUri databaseUri, [NotNull] string itemsList, [NotNull] string deep, [NotNull] string compareRevisions, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Publishing.PublishItem", completed, databaseUri.DatabaseName.ToString(), itemsList, deep, compareRevisions);
      }

    }

    private QueryAnalyzerRequests queryanalyzerrequests;

    [NotNull]
    public QueryAnalyzerRequests QueryAnalyzer { get { return this.queryanalyzerrequests ?? (this.queryanalyzerrequests = new QueryAnalyzerRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class QueryAnalyzerRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetKeywords([NotNull] Site site, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("QueryAnalyzer.GetKeywords", completed);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Run([NotNull] ItemUri itemUri, [NotNull] string script, [NotNull] string max, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("QueryAnalyzer.Run", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), script, max);
      }

    }

    private RenderingsRequests renderingsrequests;

    [NotNull]
    public RenderingsRequests Renderings { get { return this.renderingsrequests ?? (this.renderingsrequests = new RenderingsRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class RenderingsRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void ReadXslt([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Renderings.ReadXslt", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void RenderXslt([NotNull] ItemUri itemUri, [NotNull] string contextId, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Renderings.RenderXslt", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), contextId);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SaveXslt([NotNull] ItemUri itemUri, [NotNull] string fileContents, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Renderings.SaveXslt", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), fileContents);
      }

    }

    private ReportsRequests reportsrequests;

    [NotNull]
    public ReportsRequests Reports { get { return this.reportsrequests ?? (this.reportsrequests = new ReportsRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class ReportsRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void XsltGenerator([NotNull] DatabaseUri databaseUri, [NotNull] string batchScript, [NotNull] string xslt, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Reports.XsltGenerator", completed, databaseUri.DatabaseName.ToString(), batchScript, xslt);
      }

    }

    private RulesRequests rulesrequests;

    [NotNull]
    public RulesRequests Rules { get { return this.rulesrequests ?? (this.rulesrequests = new RulesRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class RulesRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetConditionsAndActions([NotNull] DatabaseUri databaseUri, [NotNull] string dataSource, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Rules.GetConditionsAndActions", completed, databaseUri.DatabaseName.ToString(), dataSource);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void TestRule([NotNull] ItemUri itemUri, [NotNull] string rules, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Rules.TestRule", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), rules);
      }

    }

    private SearchRequests searchrequests;

    [NotNull]
    public SearchRequests Search { get { return this.searchrequests ?? (this.searchrequests = new SearchRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class SearchRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Search([NotNull] string queryText, [NotNull] string field, [NotNull] string condition, [NotNull] ItemUri itemUri, [NotNull] string pageNumber, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Search.Search", completed, queryText, field, condition, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), pageNumber);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SelectItems([NotNull] string queryText, [NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Search.SelectItems", completed, queryText, databaseUri.DatabaseName.ToString());
      }

    }

    private SecurityRequests securityrequests;

    [NotNull]
    public SecurityRequests Security { get { return this.securityrequests ?? (this.securityrequests = new SecurityRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class SecurityRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void ClearOwnership([NotNull] DatabaseUri databaseUri, [NotNull] string itemList, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Security.ClearOwnership", completed, databaseUri.DatabaseName.ToString(), itemList);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Lock([NotNull] DatabaseUri databaseUri, [NotNull] string itemList, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Security.Lock", completed, databaseUri.DatabaseName.ToString(), itemList);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void TakeOwnership([NotNull] DatabaseUri databaseUri, [NotNull] string itemList, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Security.TakeOwnership", completed, databaseUri.DatabaseName.ToString(), itemList);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Unlock([NotNull] DatabaseUri databaseUri, [NotNull] string itemList, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Security.Unlock", completed, databaseUri.DatabaseName.ToString(), itemList);
      }

    }

    private SerializationRequests serializationrequests;

    [NotNull]
    public SerializationRequests Serialization { get { return this.serializationrequests ?? (this.serializationrequests = new SerializationRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class SerializationRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetItemSerializationPath([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Serialization.GetItemSerializationPath", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void UpdateDatabase([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Serialization.UpdateDatabase", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void RevertDatabase([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Serialization.RevertDatabase", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void UpdateItem([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Serialization.UpdateItem", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void RevertItem([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Serialization.RevertItem", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void UpdateTree([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Serialization.UpdateTree", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void RevertTree([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Serialization.RevertTree", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SerializeDatabase([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Serialization.SerializeDatabase", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SerializeItem([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Serialization.SerializeItem", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SerializeTree([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Serialization.SerializeTree", completed, itemUri.ItemId.ToString(), itemUri.DatabaseUri.DatabaseName.ToString());
      }

    }

    private SitesRequests sitesrequests;

    [NotNull]
    public SitesRequests Sites { get { return this.sitesrequests ?? (this.sitesrequests = new SitesRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class SitesRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetDatabasesAndLanguages([NotNull] Site site, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Sites.GetDatabasesAndLanguages", completed);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void TestTypeAndAssembly([NotNull] Site site, [NotNull] string typeName, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Sites.TestTypeAndAssembly", completed, typeName);
      }

    }

    private StatisticsRequests statisticsrequests;

    [NotNull]
    public StatisticsRequests Statistics { get { return this.statisticsrequests ?? (this.statisticsrequests = new StatisticsRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class StatisticsRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetStatistics([NotNull] Site site, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("Statistics.GetStatistics", completed);
      }

    }

    private TemplatesRequests templatesrequests;

    [NotNull]
    public TemplatesRequests Templates { get { return this.templatesrequests ?? (this.templatesrequests = new TemplatesRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class TemplatesRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void ChangeTemplates([NotNull] string itemList, [NotNull] string newTemplateId, [NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Templates.ChangeTemplates", completed, itemList, newTemplateId, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetHierarchy([NotNull] ItemUri itemUri, [NotNull] string hierarchy, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Templates.GetHierarchy", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), hierarchy);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetFieldXml([NotNull] ItemUri itemUri, [NotNull] string includeInheritedFields, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Templates.GetFieldXml", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), includeInheritedFields);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetSectionXml([NotNull] ItemUri itemUri, [NotNull] string includeInheritedFields, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Templates.GetSectionXml", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), includeInheritedFields);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetTemplateFieldSorterFields([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Templates.GetTemplateFieldSorterFields", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SaveTemplateFieldSorterFields([NotNull] DatabaseUri databaseUri, [NotNull] string xml, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Templates.SaveTemplateFieldSorterFields", completed, databaseUri.DatabaseName.ToString(), xml);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void ChangeTemplate([NotNull] ItemUri itemUri, [NotNull] string newTemplateId, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Templates.ChangeTemplate", completed, itemUri.ItemId.ToString(), newTemplateId, itemUri.DatabaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetFieldTypes([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Templates.GetFieldTypes", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetTemplateXml([NotNull] ItemUri itemUri, [NotNull] string includeInheritedFields, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Templates.GetTemplateXml", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), includeInheritedFields);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SaveTemplateXml([NotNull] DatabaseUri databaseUri, [NotNull] string xml, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Templates.SaveTemplateXml", completed, databaseUri.DatabaseName.ToString(), xml);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetTemplates([NotNull] DatabaseUri databaseUri, [NotNull] string includeBranches, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Templates.GetTemplates", completed, databaseUri.DatabaseName.ToString(), includeBranches);
      }

    }

    private JobViewerRequests jobviewerrequests;

    [NotNull]
    public JobViewerRequests JobViewer { get { return this.jobviewerrequests ?? (this.jobviewerrequests = new JobViewerRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class JobViewerRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetJobs([NotNull] Site site, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("UI.JobViewer.GetJobs", completed);
      }

    }

    private LogViewerRequests logviewerrequests;

    [NotNull]
    public LogViewerRequests LogViewer { get { return this.logviewerrequests ?? (this.logviewerrequests = new LogViewerRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class LogViewerRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetLog([NotNull] Site site, [NotNull] string maxItems, [NotNull] string categories, [NotNull] string includeFilter, [NotNull] string excludeFilter, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("UI.LogViewer.GetLog", completed, maxItems, categories, includeFilter, excludeFilter);
      }

    }

    private XpathBuilderRequests xpathbuilderrequests;

    [NotNull]
    public XpathBuilderRequests XpathBuilder { get { return this.xpathbuilderrequests ?? (this.xpathbuilderrequests = new XpathBuilderRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class XpathBuilderRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void Evaluate([NotNull] string path, [NotNull] DatabaseUri databaseUri, [NotNull] string expression, [NotNull] string mode, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("UI.XpathBuilder.Evaluate", completed, path, databaseUri.DatabaseName.ToString(), expression, mode);
      }

    }

    private ValidationRequests validationrequests;

    [NotNull]
    public ValidationRequests Validation { get { return this.validationrequests ?? (this.validationrequests = new ValidationRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class ValidationRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetValidators([NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Validation.GetValidators", completed, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetValidationIssues([NotNull] ItemUri itemUri, [NotNull] string rootId, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("Validation.GetValidationIssues", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), rootId);
      }

    }

    private WorkflowsRequests workflowsrequests;

    [NotNull]
    public WorkflowsRequests Workflows { get { return this.workflowsrequests ?? (this.workflowsrequests = new WorkflowsRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class WorkflowsRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void ExecuteWorkflowCommand([NotNull] DatabaseUri databaseUri, [NotNull] string itemList, [NotNull] string commandId, [NotNull] string comment, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Workflows.ExecuteWorkflowCommand", completed, databaseUri.DatabaseName.ToString(), itemList, commandId, comment);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetWorkflowCommands([NotNull] DatabaseUri databaseUri, [NotNull] string itemList, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Workflows.GetWorkflowCommands", completed, databaseUri.DatabaseName.ToString(), itemList);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SetWorkflowState([NotNull] DatabaseUri databaseUri, [NotNull] string itemList, [NotNull] string stateId, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("Workflows.SetWorkflowState", completed, databaseUri.DatabaseName.ToString(), itemList, stateId);
      }

    }

    private XmlLayoutsRequests xmllayoutsrequests;

    [NotNull]
    public XmlLayoutsRequests XmlLayouts { get { return this.xmllayoutsrequests ?? (this.xmllayoutsrequests = new XmlLayoutsRequests()); }}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
    public partial class XmlLayoutsRequests
    {
      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void AnalyzePlaceholdersInView([NotNull] ItemUri itemUri, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("XmlLayouts.AnalyzePlaceholdersInView", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GenerateSchema([NotNull] string siteName, [NotNull] DatabaseUri databaseUri, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("XmlLayouts.GenerateSchema", completed, siteName, databaseUri.DatabaseName.ToString());
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetRenderingItemUri([NotNull] Site site, [NotNull] string renderingItemId, [NotNull] ExecuteCompleted completed)
      {
        site.DataService.ExecuteAsync("XmlLayouts.GetRenderingItemUri", completed, renderingItemId);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void GetXmlLayout([NotNull] ItemUri itemUri, [NotNull] string siteName, [NotNull] string setItemId, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("XmlLayouts.GetXmlLayout", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), siteName, setItemId);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void RockifyXmlLayouts([NotNull] string siteName, [NotNull] DatabaseUri databaseUri, [NotNull] string setItemId, [NotNull] ExecuteCompleted completed)
      {
        databaseUri.Site.DataService.ExecuteAsync("XmlLayouts.RockifyXmlLayouts", completed, siteName, databaseUri.DatabaseName.ToString(), setItemId);
      }

      [System.CodeDom.Compiler.GeneratedCodeAttribute("SitecoreRocks", "1.0.0.0")]
      public void SaveXmlLayout([NotNull] ItemUri itemUri, [NotNull] string xmlLayout, [NotNull] ExecuteCompleted completed)
      {
        itemUri.Site.DataService.ExecuteAsync("XmlLayouts.SaveXmlLayout", completed, itemUri.DatabaseUri.DatabaseName.ToString(), itemUri.ItemId.ToString(), xmlLayout);
      }

    }

  }


}

#pragma warning restore 1591
